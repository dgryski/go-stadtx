// +build !noasm

// Generated by PeachPy 0.2.0 from stadtx.py


// func Hash(state uintptr, key_base uintptr, key_len int64, key_cap int64) uint64
TEXT Â·Hash(SB),4,$0-40
	MOVQ state+0(FP), AX
	MOVQ key_base+8(FP), BX
	MOVQ key_len+16(FP), CX
	MOVQ 0(AX), DX
	MOVQ 8(AX), DI
	MOVQ CX, SI
	ADDQ $1, SI
	MOVQ $13302243027303354703, BP
	IMULQ BP, SI
	XORQ SI, DX
	MOVQ CX, SI
	ADDQ $2, SI
	MOVQ $10119433744176468263, BP
	IMULQ BP, SI
	XORQ SI, DI
	CMPQ CX, $32
	JGE coreLong
	MOVQ CX, AX
	SHRQ $3, AX
	CMPQ AX, $0
	JEQ shortCore0
	CMPQ AX, $1
	JEQ shortCore1
	CMPQ AX, $2
	JEQ shortCore2
	CMPQ AX, $3
	JEQ shortCore3
shortCore3:
	MOVQ 0(BX), AX
	MOVQ $11248740756307325503, SI
	IMULQ SI, AX
	ADDQ AX, DX
	RORQ $17, DX
	XORQ DI, DX
	RORQ $53, DI
	ADDQ DX, DI
	ADDQ $8, BX
	SUBQ $8, CX
shortCore2:
	MOVQ 0(BX), AX
	MOVQ $11248740756307325503, SI
	IMULQ SI, AX
	ADDQ AX, DX
	RORQ $17, DX
	XORQ DI, DX
	RORQ $53, DI
	ADDQ DX, DI
	ADDQ $8, BX
	SUBQ $8, CX
shortCore1:
	MOVQ 0(BX), AX
	MOVQ $11248740756307325503, SI
	IMULQ SI, AX
	ADDQ AX, DX
	RORQ $17, DX
	XORQ DI, DX
	RORQ $53, DI
	ADDQ DX, DI
	ADDQ $8, BX
	SUBQ $8, CX
shortCore0:
	CMPQ CX, $3
	JGT after2
	CMPQ CX, $1
	JGT after10
	CMPQ CX, $0
	JGT after0
	JMP shortTail0
after0:
	JMP shortTail1
after10:
	CMPQ CX, $2
	JGT after5
	JMP shortTail2
after5:
	JMP shortTail3
after2:
	CMPQ CX, $5
	JGT after11
	CMPQ CX, $4
	JGT after1
	JMP shortTail4
after1:
	JMP shortTail5
after11:
	CMPQ CX, $6
	JGT after9
	JMP shortTail6
after9:
	JMP shortTail7
shortTail7:
	MOVBQZX 6(BX), AX
	SHLQ $32, AX
	ADDQ AX, DX
shortTail6:
	MOVBQZX 5(BX), AX
	SHLQ $48, AX
	ADDQ AX, DI
shortTail5:
	MOVBQZX 4(BX), AX
	SHLQ $16, AX
	ADDQ AX, DX
shortTail4:
	XORQ AX, AX
	MOVL 0(BX), AX
	ADDQ AX, DI
	JMP shortAfter
shortTail3:
	MOVBQZX 2(BX), AX
	SHLQ $48, AX
	ADDQ AX, DX
shortTail2:
	XORQ AX, AX
	MOVW 0(BX), AX
	ADDQ AX, DI
	JMP shortAfter
shortTail1:
	MOVBQZX 0(BX), AX
	ADDQ AX, DX
shortTail0:
	RORQ $32, DI
	XORQ $255, DI
shortAfter:
	XORQ DX, DI
	RORQ $33, DX
	ADDQ DI, DX
	ROLQ $17, DI
	XORQ DX, DI
	ROLQ $43, DX
	ADDQ DI, DX
	ROLQ $31, DI
	SUBQ DX, DI
	ROLQ $13, DX
	XORQ DI, DX
	SUBQ DX, DI
	ROLQ $41, DX
	ADDQ DI, DX
	ROLQ $37, DI
	XORQ DX, DI
	RORQ $39, DX
	ADDQ DI, DX
	RORQ $15, DI
	ADDQ DX, DI
	ROLQ $15, DX
	XORQ DI, DX
	RORQ $5, DI
	XORQ DI, DX
	MOVQ DX, ret+32(FP)
	RET
coreLong:
	MOVQ 16(AX), SI
	MOVQ 24(AX), AX
	MOVQ CX, BP
	ADDQ $3, BP
	MOVQ $10315984868811373369, R8
	IMULQ R8, BP
	XORQ BP, SI
	MOVQ CX, BP
	ADDQ $4, BP
	MOVQ $11248740756307325503, R8
	IMULQ R8, BP
	XORQ BP, AX
loop_begin:
		MOVQ 0(BX), BP
		MOVQ $2150174947, R8
		IMULQ R8, BP
		ADDQ BP, DX
		ROLQ $57, DX
		XORQ AX, DX
		MOVQ 8(BX), BP
		MOVQ $2174423983, R8
		IMULQ R8, BP
		ADDQ BP, DI
		ROLQ $63, DI
		XORQ SI, DI
		MOVQ 16(BX), BP
		MOVQ $2446010341, R8
		IMULQ R8, BP
		ADDQ BP, SI
		RORQ $47, SI
		ADDQ DX, SI
		MOVQ 24(BX), BP
		MOVQ $3248646593, R8
		IMULQ R8, BP
		ADDQ BP, AX
		RORQ $11, AX
		SUBQ DI, AX
		ADDQ $32, BX
		SUBQ $32, CX
		CMPQ CX, $32
		JGE loop_begin
	MOVQ CX, R8
	MOVQ CX, BP
	SHRQ $3, BP
	CMPQ BP, $0
	JEQ longCore0
	CMPQ BP, $1
	JEQ longCore1
	CMPQ BP, $2
	JEQ longCore2
	CMPQ BP, $3
	JEQ longCore3
longCore3:
	MOVQ 0(BX), BP
	MOVQ $2150174947, R9
	IMULQ R9, BP
	ADDQ BP, DX
	ROLQ $57, DX
	XORQ AX, DX
	ADDQ $8, BX
	SUBQ $8, CX
longCore2:
	MOVQ 0(BX), BP
	MOVQ $2174423983, R9
	IMULQ R9, BP
	ADDQ BP, DI
	ROLQ $63, DI
	XORQ SI, DI
	ADDQ $8, BX
	SUBQ $8, CX
longCore1:
	MOVQ 0(BX), BP
	MOVQ $2446010341, R9
	IMULQ R9, BP
	ADDQ BP, SI
	RORQ $47, SI
	ADDQ DX, SI
	ADDQ $8, BX
	SUBQ $8, CX
longCore0:
	RORQ $11, AX
	SUBQ DI, AX
	ADDQ $1, R8
	MOVQ $11248740756307325503, BP
	IMULQ BP, R8
	XORQ R8, DX
	CMPQ CX, $3
	JGT after3
	CMPQ CX, $1
	JGT after7
	CMPQ CX, $0
	JGT after8
	JMP longTail0
after8:
	JMP longTail1
after7:
	CMPQ CX, $2
	JGT after6
	JMP longTail2
after6:
	JMP longTail3
after3:
	CMPQ CX, $5
	JGT after12
	CMPQ CX, $4
	JGT after13
	JMP longTail4
after13:
	JMP longTail5
after12:
	CMPQ CX, $6
	JGT after4
	JMP longTail6
after4:
	JMP longTail7
longTail7:
	MOVBQZX 6(BX), CX
	ADDQ CX, DI
longTail6:
	XORQ CX, CX
	MOVW 4(BX), CX
	ADDQ CX, SI
	MOVL 0(BX), CX
	ADDQ CX, AX
	JMP longAfter
longTail5:
	MOVBQZX 4(BX), CX
	ADDQ CX, DI
longTail4:
	XORQ CX, CX
	MOVL 0(BX), CX
	ADDQ CX, SI
	JMP longAfter
longTail3:
	MOVBQZX 2(BX), CX
	ADDQ CX, AX
longTail2:
	XORQ CX, CX
	MOVW 0(BX), CX
	ADDQ CX, DI
	JMP longAfter
longTail1:
	MOVBQZX 0(BX), CX
	ADDQ CX, SI
longTail0:
	ROLQ $32, AX
	XORQ $255, AX
longAfter:
	SUBQ SI, DI
	RORQ $19, DX
	SUBQ DX, DI
	RORQ $53, DI
	XORQ DI, AX
	SUBQ AX, DX
	ROLQ $43, AX
	ADDQ AX, DX
	RORQ $3, DX
	SUBQ DX, AX
	RORQ $43, SI
	SUBQ AX, SI
	ROLQ $55, SI
	XORQ DX, SI
	SUBQ SI, DI
	RORQ $7, AX
	SUBQ SI, AX
	RORQ $31, SI
	ADDQ SI, AX
	SUBQ DI, SI
	RORQ $39, AX
	XORQ AX, SI
	RORQ $17, AX
	XORQ SI, AX
	ADDQ AX, DI
	RORQ $9, DI
	XORQ DI, SI
	ROLQ $24, SI
	XORQ SI, AX
	RORQ $59, AX
	RORQ $1, DX
	SUBQ DI, DX
	XORQ DI, DX
	XORQ AX, SI
	XORQ SI, DX
	MOVQ DX, ret+32(FP)
	RET
